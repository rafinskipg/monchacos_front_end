[{"node_title":"Ugly faces","body":{"value":"<p>Even though, the faces look hand-drawn, they are entirely expressed by algorithmic rules.</p>\r\n<p>Each face is random, each face is unique. Still, they look similar to my actual hand drawn faces.</p>\r\n","summary":"","format":"full_html","safe_value":"<p>Even though, the faces look hand-drawn, they are entirely expressed by algorithmic rules.</p>\n<p>Each face is random, each face is unique. Still, they look similar to my actual hand drawn faces.</p>\n","safe_summary":""},"url":["http://www.mokafolio.de/works/Weird-Faces"],"image":"<img typeof=\"foaf:Image\" src=\"http://rvpg.me/monchacos/sites/default/files/external_news/faces.png\" width=\"790\" height=\"344\" alt=\"\" />"},{"node_title":"Function Decompilation in Javascript","body":{"value":"<p>To put simply,</p>\r\n<p>function decompilation is the process of accessing function code as a string (then parsing its body or extracting arguments or whatever).</p>\r\n<p>In Javascript, this is done via toString() of function objects, so fn.toString() or String(fn) or fn + &#39;&#39; or anything else that delegates to Function.prototype.toString.</p>\r\n<p>The reason this is deemed unreliable in Javascript is due to its non-standard nature.</p>\r\n<p>A famous quote from ES5 spec states....</p>\r\n","summary":"","format":"full_html","safe_value":"<p>To put simply,</p>\n<p>function decompilation is the process of accessing function code as a string (then parsing its body or extracting arguments or whatever).</p>\n<p>In Javascript, this is done via toString() of function objects, so fn.toString() or String(fn) or fn + '' or anything else that delegates to Function.prototype.toString.</p>\n<p>The reason this is deemed unreliable in Javascript is due to its non-standard nature.</p>\n<p>A famous quote from ES5 spec states....</p>\n","safe_summary":""},"url":["http://perfectionkills.com/state-of-function-decompilation-in-javascript/"],"image":[]},{"node_title":"Programming is the ultimate sandbox game","body":{"value":"<p>[In Papert&rsquo;s first article about LOGO &ldquo;Twenty Things to Do with a Computer&rdquo; he] described how children might program computers to control robots, compose music, create games, draw recursive pictures, and do many other creative activities.</p>\r\n<p>...</p>\r\n<p>Despite the naysayers, to me programming is the ultimate sandbox game.</p>\r\n<p>Which is why I want to put these tools in the hands of children just to see what wonders they create, following in the footsteps of Seymour Papert.</p>\r\n<p>Just like Mitch Resnik</p>\r\n","summary":"","format":"full_html","safe_value":"<p>[In Papert\u2019s first article about LOGO \u201cTwenty Things to Do with a Computer\u201d he] described how children might program computers to control robots, compose music, create games, draw recursive pictures, and do many other creative activities.</p>\n<p>...</p>\n<p>Despite the naysayers, to me programming is the ultimate sandbox game.</p>\n<p>Which is why I want to put these tools in the hands of children just to see what wonders they create, following in the footsteps of Seymour Papert.</p>\n<p>Just like Mitch Resnik</p>\n","safe_summary":""},"url":["http://programmingisterrible.com/post/73056840109/paperts-dreams-and-our-grim-meathook-reality"],"image":[]}]